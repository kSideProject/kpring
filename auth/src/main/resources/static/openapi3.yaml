openapi: 3.0.1
info:
  title: Auth API
  description: API document
  version: 0.1.0
servers:
- url: http://localhost:30001
tags: []
paths:
  /api/v1/access_token:
    post:
      tags:
      - api
      summary: 토큰 재발급(갱신)
      description: 토큰 재발급(갱신)
      operationId: post.v1.token
      parameters:
      - name: Authorization
        in: header
        description: jwt access token 정보
        required: true
        schema:
          type: string
        example: test token
      responses:
        "200":
          description: "200"
          headers:
            Authorization:
              description: jwt access token 정보
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-access_token260094762'
              examples:
                post.v1.token:
                  value: |-
                    {
                      "accessToken" : "testToken",
                      "accessExpireAt" : "1900-01-01T00:00:00"
                    }
        "400":
          description: "400"
        "500":
          description: "500"
  /api/v1/token:
    post:
      tags:
      - api
      summary: 서버의 이상으로 인해서 토큰이 생성이 실패한 경우입니다.
      description: 서버의 이상으로 인해서 토큰이 생성이 실패한 경우입니다.
      operationId: post_api.v1.token
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-token-816804784'
            examples:
              post_api.v1.token_500:
                value: |-
                  {
                    "id" : "test",
                    "nickname" : "mock user"
                  }
              post_api.v1.token:
                value: |-
                  {
                    "id" : "test",
                    "nickname" : "mock user"
                  }
              post_api.v1.token_400:
                value: |-
                  {
                    "id" : "",
                    "nickname" : ""
                  }
      responses:
        "500":
          description: "500"
        "200":
          description: "200"
          headers:
            Authorization:
              description: jwt access token 정보
              schema:
                type: string
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-token-1585203635'
              examples:
                post_api.v1.token:
                  value: |-
                    {
                      "accessToken" : "Bearer access token",
                      "accessExpireAt" : "2000-01-01T00:00:00",
                      "refreshToken" : "Bearer refresh token",
                      "refreshExpireAt" : "2000-01-01T00:01:00"
                    }
        "400":
          description: "400"
  /api/v2/validation:
    post:
      tags:
      - api
      summary: 필요한 파라미터를 모두 입력하지 않은 사용자 실수인 경우
      description: 필요한 파라미터를 모두 입력하지 않은 사용자 실수인 경우
      operationId: post.v2.validation
      parameters:
      - name: Authorization
        in: header
        description: 검증할 토큰 정보
        required: true
        schema:
          type: string
        example: Bearer testtoken
      responses:
        "400":
          description: "400"
        "200":
          description: "200"
          headers:
            Content-type:
              description: entity type
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v2-validation1091437307'
              examples:
                post.v2.validation200:
                  value: |-
                    {
                      "data" : {
                        "type" : "ACCESS",
                        "userId" : "testUserId"
                      }
                    }
        "500":
          description: "500"
  /api/v1/token/{jwtToken}:
    delete:
      tags:
      - api
      summary: 토큰 만료(삭제)
      description: 토큰 만료(삭제)
      operationId: delete_api.v1.token
      parameters:
      - name: jwtToken
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "400":
          description: "400"
        "200":
          description: "200"
        "500":
          description: "500"
components:
  schemas:
    api-v1-token-816804784:
      required:
      - id
      - nickname
      type: object
      properties:
        nickname:
          type: string
          description: 닉네임
        id:
          type: string
          description: 유저 식별 아이디
    api-v2-validation1091437307:
      type: object
      properties:
        data:
          required:
          - type
          - userId
          type: object
          properties:
            type:
              type: string
              description: ACCESS  또는 REFRESH 값을 가지며 검증한 토큰의 타입입니다. 만약 유효하지 않은 토큰이라면
                존재하지 않습니다.
            userId:
              type: string
              description: 토큰에 저장된 유저의 id
    api-v1-access_token260094762:
      required:
      - accessExpireAt
      - accessToken
      type: object
      properties:
        accessExpireAt:
          type: string
          description: jwt access token 만료시간 형식은 yyyy-MM-dd hh:mm:ss을 제공합니다.
        accessToken:
          type: string
          description: jwt access token
    api-v1-token-1585203635:
      required:
      - accessExpireAt
      - accessToken
      - refreshExpireAt
      - refreshToken
      type: object
      properties:
        accessExpireAt:
          type: string
          description: jwt access token 만료시간입니다. 형식은 yyyy-MM-dd hh:mm:ss을 제공합니다.
        refreshExpireAt:
          type: string
          description: jwt refresh token 만료시간 형식은 yyyy-MM-dd hh:mm:ss을 제공합니다.
        accessToken:
          type: string
          description: jwt access token
        refreshToken:
          type: string
          description: jwt refresh token
